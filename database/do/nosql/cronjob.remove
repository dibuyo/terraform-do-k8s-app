resource "kubernetes_service_account" "deployment_restart" {
  metadata {
    name = "deployment-restart"
    namespace = var.namespace
  }
  automount_service_account_token = false
}

resource "kubernetes_cluster_role" "deployment_restart_role" {
  metadata {
    name = "deployment-restart"
  }

  rule {
    api_groups = ["apps", "extensions"]
    resources  = ["deployments"]
    verbs      = ["get", "patch", "list", "watch"]
  }
}

resource "kubernetes_cluster_role_binding" "deployment_restart_role_binding" {
  metadata {
    name = "deployment-restart"
  }
  role_ref {
    api_group = "rbac.authorization.k8s.io"
    kind      = "ClusterRole"
    name      = "deployment-restart"
  }
  subject {
    kind      = "ServiceAccount"
    name      = kubernetes_service_account.deployment_restart.metadata.0.name
    namespace = var.namespace
  }
}

resource "kubernetes_cron_job" "restart_redis" {
  metadata {
    name = "restart-redis"
    namespace = var.namespace
  }
  spec {
    #concurrency_policy            = "Replace"
    concurrency_policy            = "Forbid"
    failed_jobs_history_limit     = 5
    schedule                      = "0 */6 * * *"
    starting_deadline_seconds     = 10
    successful_jobs_history_limit = 10
    #active_deadline_seconds = 60
    job_template {
      metadata {}
      spec {
        backoff_limit = 2
        template {
          metadata {}
          spec {
            service_account_name = kubernetes_service_account.deployment_restart.metadata.0.name
            restart_policy = "Never"
            automount_service_account_token = true
            container {
              name    = "kubectl"
              image   = "bitnami/kubectl"
              command = ["kubectl", "rollout", "restart", "deployment/redis"]
            }
          }
        }
      }
    }
  }
}